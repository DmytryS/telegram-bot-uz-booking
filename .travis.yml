sudo: required
services:
  - docker
language: node_js
node_js:
  - 12
jobs:
  include:
  - stage: build
    script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`
      - docker build -t $DOCKER_BOT_REPO:$TAG ./bot/
      - docker run $DOCKER_BOT_REPO:$TAG run lint
      - docker push $DOCKER_BOT_REPO:$TAG
      - docker build -t $DOCKER_PLANER_REPO:$TAG ./planner/
      - docker run $DOCKER_PLANER_REPO:$TAG run lint
      - docker push $DOCKER_PLANER_REPO:$TAG
      - docker build -t $DOCKER_WATCHER_REPO:$TAG ./watcher/
      - docker run $DOCKER_WATCHER_REPO:$TAG run lint
      - docker push $DOCKER_WATCHER_REPO:$TAG
  - stage: build_version_and_deploy
    if: tag IS present
    script:
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - sudo mv ./kubectl /usr/local/bin/kubectl
      - export KUBECONFIG=${HOME}/.kube/config
      - mkdir ${HOME}/.kube
      - echo $KUBE_CLUSTER_CERTIFICATE | base64 --decode >>  ${HOME}/.kube/ca.pem
      - echo $KUBE_CLIENT_KEY | base64 --decode >>  ${HOME}/.kube/admin-key.pem
      - echo $KUBE_CLIENT_CERTIFICATE | base64 --decode >>  ${HOME}/.kube/admin-cert.pem
      - kubectl config set-credentials $KUBE_CLUSTER_USERNAME --username=$KUBE_CLUSTER_USERNAME --client-certificate=${HOME}/.kube/admin-cert.pem --client-key=${HOME}/.kube/admin-key.pem
      - kubectl config set-cluster $KUBE_CLUSTER_NAME --server=$KUBE_CLUSTER_IP --certificate-authority=${HOME}/.kube/ca.pem
      - kubectl config set-context $KUBE_CLUSTER_CONTEXT --user=$KUBE_CLUSTER_USERNAME --namespace=default --cluster=$KUBE_CLUSTER_NAME
      - kubectl config use-context $KUBE_CLUSTER_CONTEXT
      - docker build -t $DOCKER_BOT_REPO:$TRAVIS_TAG ./bot/
      - docker run $DOCKER_BOT_REPO:$TRAVIS_TAG run lint
      - docker push $DOCKER_BOT_REPO:$TRAVIS_TAG
      - docker build -t $DOCKER_PLANER_REPO:$TRAVIS_TAG ./planner/
      - docker run $DOCKER_PLANER_REPO:$TRAVIS_TAG run lint
      - docker push $DOCKER_PLANER_REPO:$TRAVIS_TAG
      - docker build -t $DOCKER_WATCHER_REPO:$TRAVIS_TAG ./watcher/
      - docker run $DOCKER_WATCHER_REPO:$TRAVIS_TAG run lint
      - docker push $DOCKER_WATCHER_REPO:$TRAVIS_TAG
      - kubectl set image deployment/bot bot=${DOCKER_BOT_REPO}:${TAG} -n ${KUBE_NAMESPACE}
      - kubectl set image deployment/watcher watcher=${DOCKER_WATCHER_REPO}:${TAG} -n ${KUBE_NAMESPACE}
      - kubectl set image cronjob/planner planner=${DOCKER_PLANER_REPO}:${TAG} -n ${KUBE_NAMESPACE}
